upstream comfyui {
    server 192.168.50.128:3002;
}

upstream dashboard {
    server 192.168.50.128:5173;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

access_by_lua_file /etc/nginx/access_by_lua;

server {
    # 如果设置 80 端口，显示 nginx 的欢迎页面，没有进行代理，不知道为什么
    listen   80;
    server_name comfyui.szqrinfo.com

    # dns;
    resolver 127.0.0.11 valid=1s ipv6=off;

    error_log  /var/log/nginx/error.log info;
    access_log  /var/log/nginx/access.log;

    error_log /dev/stderr info;
    access_log /dev/stdout;

    add_header Cache-Control private;

    location /login {
        add_header Content-Type 'application/json';
        content_by_lua_block {                        
            local session_data = ngx.req.get_headers()["X-USER"];               
            ngx.say(session_data);
            ngx.req.clear_header("X-USER");
          
            return ngx.exit(ngx.HTTP_OK);
        }
    }

    # 拦截 /prompt 请求，将请求转发给 stable diffusion runtime
    location /prompt {
        add_header Content-Type "application/json";
        content_by_lua_block {
            local resty_random = require("resty.random")
            local resty_string = require("resty.string")
            local taskID = resty_string.to_hex(resty_random.bytes(64))

            local cjson = require("cjson")

            local token_data = cjson.decode(ngx.req.get_headers()["X-USER"])          
            
            local userID = token_data.id_token.preferred_username

            -- this is required to read the request body
            ngx.req.read_body()
            
            local prompt = ngx.req.get_body_data()
            local prompt_id = userID .. "-" .. taskID

            local task = {
                metadata = {
                    id = prompt_id,
                    runtime = "sdruntime",
                    tasktype = "pipeline",
                    prefix = userID,
                    context = "userID=" .. userID
                },
                content = cjson.decode(prompt)
            }

            -- TODO, send task to runtime

            ngx.say(cjson.encode({prompt_id = prompt_id, number = 0, node_errors = {},}));

            return ngx.exit(ngx.HTTP_OK);
        }
    }

    location / {
        proxy_pass http://comfyui;
        proxy_http_version 1.1;
        # http/s => ws/s
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_redirect off;
    }

    error_page 404 /404.html;
        location = /40x.html {
    }
    
    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        root /usr/share/nginx/html;
    }
}

server {
    listen   80;
    server_name dashboard.szqrinfo.com

    resolver 127.0.0.11 valid=1s ipv6=off;

    error_log  /var/log/nginx/error.log info;
    access_log  /var/log/nginx/access.log;

    error_log /dev/stderr info;
    access_log /dev/stdout;

    location /login {
        add_header Content-Type 'application/json';
        content_by_lua_block {                        
            local session_data = ngx.req.get_headers()["X-USER"];               
            ngx.say(session_data);
            ngx.req.clear_header("X-USER");
          
            return ngx.exit(ngx.HTTP_OK);
        }
    }

    location / {
        proxy_pass http://dashboard/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_redirect off;
    }

    error_page 404 /404.html;
        location = /40x.html {
    }
    
    error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        root /usr/share/nginx/html;
    }
}